service: snapshot-service # NOTE: update this with your service name
#app: your-app-name
#tenant: your-tenant-name

frameworkVersion: "=1.44.1"

custom: 
  save-bucket: snapshots #name of bucket where the data will be saved
  fetch-bucket: aasiudghflaiuegrhabdf #name of bucket where we retrieve HTML/CSS/JS

provider:
  name: aws
  runtime: nodejs10.x
  memorysize: 512
  #iamRoleStatements #Permissions for all the functions set here.

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:putObject"
        - "s3:PutObjectAcl"
      Resource: "arn:aws:s3:::${self:custom.save-bucket}/*"
    - Effect: "Allow"
      Action:
        - "s3:ListBucket"
        - "s3:getObject"
      Resource: "arn:aws:s3:::${self:custom.fetch-bucket}/*"

layers:
  modules:
  # Ref name is generated by TitleCasing the layer name & appending LambdaLayer
    path: node_modules
    description: all the node modules we need to run, here to make deployments faster. 

# you can define service wide environment variables here
#  environment:
#    variable1: value1

functions:
  screenshot:
    handler: handler.screenshot
    environment:
      SAVEBUCKET: ${self:custom.save-bucket}
    layers:
      - {Ref: ModulesLambdaLayer}
  archiveFiles:
    handler: handler.archiveFiles
    environment:
      SAVEBUCKET: ${self:custom.save-bucket}
      FETCHBUCKET: ${self:custom.fetch-bucket}
    layers:
      - {Ref: ModulesLambdaLayer}

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
